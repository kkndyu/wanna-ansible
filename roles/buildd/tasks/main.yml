---
# tasks file for buildd
- name: install apt packages
  apt: >
    pkg={{ item }} update_cache=yes cache_valid_time=3600
    force=yes install_recommends=no state=present
  with_items:
    - sbuild
    - buildd
    - sudo
    - schroot

- name: disable buildd daemon during install
  file: path=/var/lib/buildd/NO-DAEMON-PLEASE state=touch mode=0644

- include: import-keys.yml
#
# TODO
# Set SBUILD_JOBS needed in buildd.conf
# Run `cat /proc/cpuinfo | grep "processor" | wc -l` in host
# Get the result, then set the value here
# How do this in ansible?
#
# 1. custom module return dict {ansible_facts:{SBUILD_JOBS:}}
# 2. register shell output then call set_fact
# 3. a ansible facts named ansible_processor_count
# Here choosing the FIRST one
#
- name: get facts by module
  get_cpuinfo:

#- name: get cpu number
#  shell: |
#    cat /proc/cpuinfo | grep "processor" | wc -l
#  register: cpu_number
#  tags: set_fact_cpu_number
#
#- set_fact: SBUILD_JOBS={{cpu_number.stdout}}
#  tags: set_fact_cpu_number

- name: buildd config file
  template: >
    src=template-buildd.conf.j2
    dest=/etc/buildd/buildd.conf
    mode=0644
#  notify: restart buildd

- name: dupload config file
  template: >
    src=dupload.conf.j2
    dest=/etc/dupload.conf
    mode=0644

- name: sbuild config file
  template: >
    src=sbuild.conf.j2
    dest=/etc/sbuild/sbuild.conf
    mode=0644

- name: sbuild add buildd to sbuild group
  shell: sbuild-adduser buildd

- name: create buildd workspace
  shell: |
    mkdir -p {{BUILDD_WORKSPACE}}
    test -L /buildd && rm /buildd ; ln -s {{BUILDD_WORKSPACE}} /buildd
#
# TODO   create chroot image
#

- name: install buildd chroot
  shell: |
    test -d "/var/lib/schroot/unpack" && rm -fr /var/lib/schroot/unpack
    test -L "/var/lib/schroot/unpack" && rm /var/lib/schroot/unpack
    mkdir -p /buildd/schroot_unpack
    ln -s `readlink -f /buildd/schroot_unpack` /var/lib/schroot/unpack
    test -d "/var/lib/schroot/mount" && rm -fr /var/lib/schroot/mount
    test -L "/var/lib/schroot/mount" && rm /var/lib/schroot/mount
    mkdir -p /buildd/schroot_mount
    ln -s `readlink -f /buildd/schroot_mount` /var/lib/schroot/mount
    rm -f /etc/schroot/chroot.d/${CHROOT_NAME}*
    wget -O /buildd/{{BUILDD_CHROOT_IMAGE_FILE}} {{CHROOT_IMAGE_URL}}

- name: schroot config file
  template: >
    src=schroot.conf.j2
    dest=/etc/schroot/chroot.d/{{CHROOT_NAME}}
    mode=0644

- debug: var=out
  tags: debug


