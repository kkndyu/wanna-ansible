# initialize-wanna-db.yml
---
- name: create tables via sql
  shell: "psql -d wannadb -f /srv/wanna-build/schema/main-tables.sql"
  sudo_user: postgres
  sudo: True

- name: copy role.sql to remote
  copy:  src=./scripts/wanna-build-refine-roles.sql dest="/srv/wanna-build/schema/refine-roles.sql"

- name: create roles via sql
  shell: "psql -d wannadb -f /srv/wanna-build/schema/refine-roles.sql"
  sudo_user: postgres
  sudo: True

- name: create arch-tables.sql
  shell: ARCHES="amd64 mips64el ppc64el ppc64"; rm -f /tmp/arches-tables.sql; for arch in $ARCHES; do sed -e "s/ARCH/$arch/g" < /srv/wanna-build/schema/arches-tables.in >> /tmp/arches-tables.sql ; done

- name: run arch-tables sql
  shell: "psql -d wannadb -f /tmp/arches-tables.sql"
  sudo_user: postgres
  sudo: True

- name: insert arch and dist via sql
  sudo_user: postgres
  sudo: True
  shell: |
    psql -d wannadb  << EOF
    INSERT INTO distributions(distribution,build_dep_resolver,archive) VALUES ('jessie','',''), ('sid','','');
    INSERT INTO architectures(architecture) VALUES ('amd64'), ('mips64el'), ('ppc64el'), ('ppc64');
    INSERT INTO distribution_architectures(distribution,architecture) VALUES ('jessie','amd64'), ('jessie','mips64el'), ('jessie','ppc64el'), ('jessie','ppc64');
    INSERT INTO locks(distribution,architecture) VALUES ('jessie','amd64'), ('jessie','mips64el'), ('jessie','ppc64el'),('jessie','ppc64');
    INSERT INTO distribution_architectures(distribution,architecture) VALUES ('sid','amd64'), ('sid','mips64el'), ('sid','ppc64el'), ('sid','ppc64');
    INSERT INTO locks(distribution,architecture) VALUES ('sid','amd64'), ('sid','mips64el'), ('sid','ppc64el'), ('sid','ppc64');
    EOF
