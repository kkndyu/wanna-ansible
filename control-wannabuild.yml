# control-wannabuild.yml
#
# If there are two vars, then two -e should define here.
# vars defined in -e has the highest precedence
# ansible-playbook ./control-wannabuild.yml -t reset-all,debug  -e HOST=buildd4* -e SUITE=jessie-proposed-updates
#
---
- name: control wanna server
  hosts: "{{ HOST }}"
  gather_facts: False
  vars:
    ARCH: amd64
    SUITE: jessie
    STATE: all
    PLIST: default.list
    USAGE: |
      Usage:
      wannaplay reset-all
      ansible-playbook ./control-wannabuild.yml -t usage -e HOST=all
      ansible-playbook ./control-wannabuild.yml -t reset-all,debug  -e HOST=buildd4* -e SUITE=jessie-proposed-updates -e STATE=bd-uninstallable
      ansible-playbook ./control-wannabuild.yml -t reset-by-name,debug  -e 'PACKAGES=tagainijisho_1.0.2-1'
      ansible-playbook ./control-wannabuild.yml -t query-by-name,debug  --extra-vars 'PACKAGES=tagainijisho_1.0.2-1,nut_2.7.2-4'
      ansible-playbook ./control-wannabuild.yml -t reset-by-list,debug  --extra-vars 'PLIST=X11.list'
      ansible-playbook ./control-wannabuild.yml -t export-list,debug  -e HOST=buildd4* -e SUITE=jessie-proposed-updates -e STATE=bd-uninstallable
      ansible-playbook ./control-wannabuild.yml -t clear-wannadb,debug  -e HOST=buildd4* -e SUITE=jessie-proposed-updates -e STATE=bd-uninstallable
      ansible-playbook ./control-wannabuild.yml -t import,debug  -e HOST=buildd4*
      ansible-playbook ./control-wannabuild.yml -t import-overlay,debug  -e HOST=buildd4*
      ansible-playbook ./control-wannabuild.yml -t import-secondary,debug  -e HOST=buildd4*
      ansible-playbook ./control-wannabuild.yml -t query-statistic,debug  -e HOST=buildd4*
      ansible-playbook ./control-wannabuild.yml -t list-package,debug  -e HOST=buildd4* -e STATE=bd-uninstallable
  tasks:
    - name: print Usage
      debug: var=USAGE.split('\n')
      tags: usage
      run_once: true

    - name: reset all packages of one suite to needs-build
      # there two kind of package name+version, can't use : as FS
      # - hamradio/xnec2c_1:3.0-1
      # - debian-installer/debian-installer-utils_1.110:
      # using pipe to avoid redirect I/O (MAY speed up)
      shell: |
        sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} --list={{STATE}} |
        awk  ' {split($1,parts,"/");if(parts[2]!="") print parts[2]}' |
        sed  's/:$//g' |
        while read line; do
            sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} --simulate-dose --override --needs-build $line -v
        done
      register: out
      tags:
        - reset-all

    - name: reset packages state by name
      # handle a,b,  ,a,b
      shell: |
        echo {{PACKAGES}} | awk -vFS=',' -vOFS='\n' '{NF=NF;print $0}' | sed '/^\s*$/d' |
        while read line; do
            sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} --simulate-dose --override --needs-build $line -v
        done
      register: out
      tags:
        - reset-by-name

    - name: query packages state by name
      shell: |
        echo {{PACKAGES}} | awk -vFS=',' -vOFS='\n' '{NF=NF;print $0}' | sed '/^\s*$/d' |
        while read line; do
            sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} -i $line -v
        done
      register: out
      tags:
        - query-by-name

    - name: copy wanna-build src
      copy: src=./needs-build/{{PLIST}}  dest=/tmp/{{PLIST}}
      tags:
        - reset-by-list
    - name: reset packages state by list file
      shell: |
        while read line; do
            sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} --simulate-dose --override --needs-build $line -v
        done < /tmp/{{PLIST}}
      register: out
      tags:
        - reset-by-list
    
    - name: export package list
      shell: |
        sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} --list={{STATE}} |
        awk  ' {split($1,parts,"/");if(parts[2]!="") print parts[2]}' |
        sed  's/:$//g' > /tmp/{{STATE}}.list
      register: out
      tags:
        - export-list

    - name: fetch list here
      fetch: >
        src=/tmp/{{STATE}}.list
        dest=/tmp/fetched/{{inventory_hostname}}/
        flat=yes
      tags:
        - export-list

    - name: clear one suite in wannadb
      shell: |
        sudo -u wbadm /usr/bin/wanna-build -A {{ARCH}} --dist={{SUITE}} --list={{STATE}} |
        awk  ' {split($1,parts,"/");if(parts[2]!="") print parts[2]}' |
        sed  's/:$//g' |
        while read line; do sudo -u wbadm wanna-build -A {{ARCH}} -d {{SUITE}} --forget $line ; done
      register: out
      tags:
        - clear-wannadb
    
    - name: import packages
      script: ./scripts/trigger-default.local
      become_user: wbadm
      become: True
      register: out
      tags:
        - import

    - name: import overlay
      script: ./scripts/trigger-updates.local
      become_user: wbadm
      become: True
      register: out
      tags:
        - import-overlay
    
    - name: import secondary 
      script: ./scripts/trigger-secondary.local
      become_user: wbadm
      become: True
      register: out
      tags:
        - import-secondary
    
    - name: wannadb statistic
      shell: |
        sudo -u wbadm /srv/wanna-build/bin/wanna-build-statistics --database={{ARCH}} --dist={{SUITE}} 
      register: out
      tags:
        - query-statistic
    
    - name: wannadb list packages
      shell: |
        sudo -u wbadm wanna-build -A {{ARCH}} --dist={{SUITE}} -l {{STATE}}
      register: out
      tags:
        - list-package

    - debug: var=out.stdout_lines
      tags: debug

    - debug: var=out
      tags: debugall

#    - debug: msg="Usage ansible-playbook ./control-wanna-server.yml -t {{ item }}"
#      with_items:
#        - reset-all
#        - reset-package-by-name,debug  --extra-vars 'PACKAGE=tagainijisho_1.0.2-1'
#      tags:
#        - usage

